use std::str::FromStr;

grammar;

pub Expr: i32 = {
    <l:Expr> "+" <r:Factor> => l + r,
    <l:Expr> "-" <r:Factor> => l - r,
    Factor,
};

Factor: i32 = {
    <l:Factor> "*" <r:Term> => l * r,
    <l:Factor> "/" <r:Term> => l / r,
    Term,
};

Term: i32 = {
    Num,
    "(" <Expr> ")",
};

Num: i32 = {
    r"[0-9]+" => i32::from_str(<>).unwrap(),
};

//pub Term = {
//    Num,
//    "(" <Term> ")",
//    "22" => format!("Twenty-two!"),
//    ID => format!("Id({})", <>), // <-- we added this
//};

//Num: String = r"[0-9]+" => <>.to_string();


//match {
//    r"[0-9]+",
//    "22"
//} else {
//    r"\w+" => ID,
//    _
//}    
